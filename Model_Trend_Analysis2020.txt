
    model{
    
    #################
    #Detection model#
    #################
   # priors for distance model; 

pi <- 3.141593

#random year effect for distance sampling model; 
## Priors for hyper-parameters
mu.dd ~ dunif(0,200)
tau.dd <- pow(sigma.dd, -2)
sigma.dd ~ dunif(0, 20)

for(j in 1:n.Sites2){
for(t in 1:n.Years){
  eps.dd[j,t] ~dnorm(0, tau.dd) 
                  }
                  }



########################################################

for(j in 1:n.Sites2){
for(t in 1:n.Years){
  sigma[j,t] <- mu.dd + eps.dd[j,t]
  sigma2[j,t] <- sigma[j,t]*sigma[j,t]
  
  # effective strip width
  esw[j,t] <- sqrt(pi * sigma2[j,t] / 2) 
  p[j,t] <- esw[j,t] / W
  f0[j,t] <- 1/esw[j,t] #assuming all detected on the line
                  }}

########################################################   
for (i in 1:N){ 
  # LIKELIHOOD
  # using zeros trick
  y[i] ~ dunif(0,W) 
  L.f0[i] <- exp(-y[i]*y[i] / (2*sigma2[detectionSite2[i], detectionYear[i]])) * 1/esw[detectionSite2[i], detectionYear[i]] #y are the distances
  nlogL.f0[i] <-  -log(L.f0[i])
  zeros.dist[i] ~ dpois(nlogL.f0[i])
                  }

## Hierarchicla node: esw[j,t]; 
    
########################
#Model of total density#
########################
    
    #priors
    int.d ~ dnorm(0,0.001)    
    
    #random line effect
    line.d.sd ~ dunif(0,10)
    line.d.tau <- pow(line.d.sd,-2)
    for(j in 1:n.Lines){
    random.d.line[j] ~ dnorm(0,line.d.tau)
    }
    

    #random site2 effect
    site2.d.sd ~ dunif(0,10)
    site2.d.tau <- pow(site2.d.sd,-2)
    for(j in 1:n.Sites2){
    random.d.site2[j] ~ dnorm(0,site2.d.tau)
    }

    #random site0 effect
    site0.d.sd ~ dunif(0,10)
    site0.d.tau <- pow(site0.d.sd,-2)
    for(j in 1:n.Sites0){
    random.d.site0[j] ~ dnorm(0,site0.d.tau)
    }
    
    #Model for first year
    for(j in 1:n.Lines){
    for(t in 1:1){

    #linear predictor on density
    log(Density[j,t]) <- int.d + 
    random.d.line[j] + 
    random.d.site2[site2[j]]  
    }
    } 

####################################################
    ### Model for subsequent years; 
    #growth rate; overall
    r_mean ~ dunif(-0.2, 0.2)

    #growth rate; year
    r_T.sd ~ dunif(0,10)
    r_T.tau <- pow(r_T.sd,-2)

    for(t in 1:n.Years){
    r_T[t] ~ dnorm(0, r_T.tau)
    }
                       
    #growth rate; region; 
    r_s2.sd ~ dunif(0,10)
    r_s2.tau <- pow(r_s2.sd,-2)
    for(j in 1:n.Sites2){
    r_s2[j] ~ dnorm(0, r_s2.tau)
    }
    
    #growth rate; region x year
    r_s2T.sd ~ dunif(0,10)
    r_s2T.tau <- pow(r_s2T.sd,-2)

    for(j in 1:n.Sites2){
    for(t in 1:n.Years){
    r_s2T[j,t] ~ dnorm(0, r_s2T.tau)
    }}
    
    #growth rate; region; 
    r_s0.sd ~ dunif(0,10)
    r_s0.tau <- pow(r_s0.sd,-2)
    for(j in 1:n.Sites0){
    r_s0[j] ~ dnorm(0, r_s0.tau)
    }
    
    #growth rate; region x year
    r_s0T.sd ~ dunif(0,10)
    r_s0T.tau <- pow(r_s0T.sd,-2)

    for(j in 1:n.Sites0){
    for(t in 1:n.Years){
    r_s0T[j,t] ~ dnorm(0, r_s0T.tau)
    }}
 

############################################# 
### Dynamics - year 2 and onwards    
      
    for(j in 1:n.Lines){
    for(t in 2:n.Years){
    
    #linear predictor on density
    lam[j,t-1] <- exp(r_mean)
    Density[j,t] <- Density[j,t-1] * lam[j, t-1] 
    
    #r_mean + 
    #r_T[t] +
    #r_s2T[site2[j],t] 
    #r_s0[site0[j]] 
    #r_s0T[site0[j],t]  

    
    }
    }    
    
    ###################################################
    ###################################################
    ## Linking to number of observed birds; 
        for(j in 1:n.Lines){
        for(t in 1:n.Years){
    
    
        expN_tot_LY[j,t] <- (Density[j,t] * (TransectLength[j,t]/1000 * (W/1000) * 2))
        NuIndivs[j,t] ~ dpois(expNuIndivs[j,t])
        expNuIndivs[j,t] <- Density[j,t] * ((TransectLength[j,t]/1000) * (W/1000) *2) * p[detectionSite2[j],t]

                          }
                          }  

    ####################################################
    # N hat - Total individuals in covered area; 

    for (t in 1:n.Years){
    N_tot[t] <- sum(expN_tot_LY[,t])
    N_tot_SD[t] <- N_tot[t]/N_tot[1]
    }


    ####################################################
    # Mean density in (total) covered area 
    
    for (t in 1:n.Years){
    Mean_D[t] <- mean(Density[,t])
    Mean_SD[t] <- Mean_D[t]/Mean_D[1]
    }




    }
    
